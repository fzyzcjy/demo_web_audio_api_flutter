// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.37.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import '../media_element.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These types are ignored because they are not used by any `pub` functions: `MediaElementAudioSourceNode`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MediaElementAudioSourceOptions>>
@sealed
class MediaElementAudioSourceOptions extends RustOpaque {
  // Not to be used by end users
  MediaElementAudioSourceOptions.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  MediaElementAudioSourceOptions.frbInternalSseDecode(
      BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_MediaElementAudioSourceOptions,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_MediaElementAudioSourceOptions,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_MediaElementAudioSourceOptionsPtr,
  );

  MediaElement get mediaElement => RustLib.instance.api
          .webAudioApiNodeMediaElementSourceMediaElementAudioSourceOptionsGetMediaElement(
        that: this,
      );

  void set mediaElement(MediaElement mediaElement) => RustLib.instance.api
      .webAudioApiNodeMediaElementSourceMediaElementAudioSourceOptionsSetMediaElement(
          that: this, mediaElement: mediaElement);
}
